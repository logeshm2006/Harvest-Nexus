<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Harvest Nexus - AI-Powered Crop Prediction & Sign In</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    /* Custom styles for enhanced uniqueness and animations */
    body {
      font-family: 'Arial', sans-serif;
      margin: 0;
      padding: 0;
      overflow-x: hidden;
      background-color: #f4f4f4; /* Fallback background */
    }

    .hero-container {
      position: relative;
      width: 100%;
      height: 100vh;
      overflow: hidden;
    }

    .hero-image {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      object-fit: cover;
      z-index: 1;
      filter: brightness(0.6); /* Dim the image for text readability */
      transition: filter 0.5s ease;
    }

    .hero-overlay {
      position: relative;
      z-index: 2;
      width: 100%;
      height: 100%;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      align-items: center;
      padding: 2rem;
      color: white;
      text-align: center;
    }

    .header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      width: 100%;
      max-width: 1200px;
      margin-bottom: auto;
    }

    .logo-section {
      display: flex;
      align-items: center;
    }

    .logo-section h1 {
      font-weight: bold;
      font-size: 2.5rem; /* Bold heading */
      margin: 0;
      text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);
    }

    .button,
    .sign-in-button {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      border: none;
      padding: 0.75rem 1.5rem;
      color: white;
      font-weight: bold;
      border-radius: 0.5rem;
      cursor: pointer;
      transition: transform 0.3s, box-shadow 0.3s;
      text-decoration: none;
    }

    .button:hover,
    .sign-in-button:hover {
      transform: scale(1.05);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
    }

    .sign-in-button {
      opacity: 0.9; /* Slightly dim to show it's active */
    }

    @keyframes pulse {
      0% {
        box-shadow: 0 0 0 0px rgba(255, 255, 255, 0.5);
      }

      100% {
        box-shadow: 0 0 0 10px rgba(255, 255, 255, 0);
      }
    }

    .overview {
      max-width: 800px;
      line-height: 1.8;
      text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);
      font-size: 1.2rem;
      margin-bottom: 2rem;
    }

    .instruction-button {
      margin-top: 2rem;
    }

    @media (max-width: 768px) {
      .header {
        flex-direction: column;
        gap: 1rem;
      }

      .logo-section h1 {
        font-size: 2rem;
      }

      .overview {
        font-size: 1rem;
        padding: 1rem;
      }
    }

    /* Animation for overview text */
    .overview p {
      animation: fadeInUp 2s ease-out;
    }

    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(30px);
      }

      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    /* Login form styles */
    .login-section {
      position: relative;
      background: url('https://storage.googleapis.com/workspace-0f70711f-8b4e-4d94-86f1-2a93ccde5887/image/47b20236-7c69-42c6-805e-fda822b7c55b.png') no-repeat center center fixed;
      background-size: cover;
      padding: 4rem 1rem;
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      color: #1f2937;
      font-family: 'Inter', sans-serif;
      overflow: auto;
    }

    /* Overlay behind login form for readability */
    .login-overlay {
      background-color: rgba(255, 255, 255, 0.9);
      border-radius: 20px;
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
      animation: fadeIn 1s ease-in;
      max-width: 400px;
      width: 100%;
      padding: 2rem 2.5rem;
    }

    .input-group {
      position: relative;
    }

    .input-field {
      padding: 12px 16px;
      border: 2px solid #e5e7eb;
      border-radius: 12px;
      width: 100%;
      font-size: 16px;
      transition: border-color 0.3s ease, box-shadow 0.3s ease;
    }

    .input-field:focus {
      outline: none;
      border-color: #4f46e5;
      box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);
    }

    .icon {
      position: absolute;
      right: 16px;
      top: 50%;
      transform: translateY(-50%);
      color: #9ca3af;
      cursor: pointer;
      user-select: none;
    }

    .btn {
      background-color: #4f46e5;
      color: white;
      padding: 12px 32px;
      border-radius: 12px;
      font-weight: bold;
      width: 100%;
      border: none;
      cursor: pointer;
      transition: transform 0.3s ease;
    }

    .btn:hover {
      transform: scale(1.05);
    }

    .error-message {
      color: #ef4444;
      font-size: 14px;
      margin-top: 5px;
      display: none;
    }

    .success-message {
      color: #10b981;
      font-size: 16px;
      margin-top: 20px;
      display: none;
      text-align: center;
    }

    /* Custom checkbox styling */
    .checkbox-container {
      accent-color: #4f46e5;
    }

    /* Mobile responsiveness adjustments */
    @media (max-width: 768px) {
      .login-overlay {
        margin: 20px;
        padding: 40px 30px;
      }
    }
  </style>
</head>
<body>
  <div class="hero-container" id="home">
    <!-- Background image using <img> tag as per guidelines -->
    <img
      src="https://storage.googleapis.com/workspace-0f70711f-8b4e-4d94-86f1-2a93ccde5887/image/47b20236-7c69-42c6-805e-fda822b7c55b.png"
      alt="Vast agricultural landscape at dawn with fertile fields of wheat and corn under a golden sunrise, farm equipment in distance, emphasizing sustainable farming and crop growth in a natural rural environment with misty horizons and healthy soil patterns"
      class="hero-image"
    />

    <div class="hero-overlay">
      <!-- Top flexbox with sign-in button and heading -->
      <div class="header">
        <div class="logo-section">
          <h1>Harvest Nexus</h1>
        </div>
        <button id="signInBtn" class="button sign-in-button">Sign in</button>
      </div>

      <!-- Overview at center -->
      <div class="overview">
        <h2>AI-Powered Crop Yield Prediction & Optimization</h2>
        <p>
          Helping farmers make smarter decisions with data. Our platform uses
          artificial intelligence and real-time insights to predict crop yields,
          analyze weather and soil conditions, and provide actionable
          recommendations for better planning. With this, farmers can reduce
          risks, improve productivity, and use resources more efficiently‚Äîleading
          to sustainable and profitable farming.
        </p>
      </div>

      <!-- Instruction button below overview -->
      <button
        class="button instruction-button"
        onclick="alert('Instruction panel: \n Step 1 - Sign up for an account. \n Step 2 - Upload your farm data.\n Step 3 - Receive AI predictions!')"
      >
        Instructions
      </button>
    </div>
  </div>

  <!-- Login Section -->
  <section class="login-section" id="loginSection" style="display:none;">
    <div class="login-overlay">
      <p class="mb-6 text-center">
        <a href="#home" id="backToHome" class="text-indigo-600 hover:underline"
          >&larr; Back to Home</a
        >
      </p>
      <div class="text-center mb-6">
        <h1 class="text-3xl font-bold text-gray-800 mb-2">Welcome Back</h1>
        <p class="text-gray-600">Sign in to your account</p>
      </div>
      <form id="loginForm">
        <div class="mb-4">
          <label for="fullName" class="block text-gray-700 font-medium mb-2"
            >Full Name</label
          >
          <input
            type="text"
            id="fullName"
            class="input-field"
            placeholder="Enter your full name"
            required
          />
          <div class="error-message" id="nameError">
            Please enter your full name.
          </div>
        </div>
        <div class="mb-4">
          <label for="email" class="block text-gray-700 font-medium mb-2"
            >Email</label
          >
          <input
            type="email"
            id="email"
            class="input-field"
            placeholder="Enter your email"
            required
          />
          <div class="error-message" id="emailError">
            Please enter a valid email address.
          </div>
        </div>
        <div class="mb-4 input-group">
          <label for="password" class="block text-gray-700 font-medium mb-2"
            >Password</label
          >
          <input
            type="password"
            id="password"
            class="input-field pr-12"
            placeholder="Enter your password"
            required
          />
          <span class="icon" id="togglePassword" title="Toggle visibility"
            >üëÅ</span
          >
          <div class="error-message" id="passwordError">
            Password must be at least 8 characters long.
          </div>
        </div>
        <div class="flex items-center mb-6">
          <input type="checkbox" id="rememberMe" class="checkbox-container" />
          <label for="rememberMe" class="ml-2 text-gray-700">Remember me</label>
        </div>
        <button type="submit" class="btn">Sign In</button>
      </form>
      <div id="successMessage" class="success-message text-center"></div>
      <p class="text-center text-gray-600 mt-6">
        Don't have an account?
        <a href="#" class="text-indigo-600 hover:underline">Sign up here</a>
      </p>
    </div>
  </section>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const signInBtn = document.getElementById('signInBtn');
      const loginSection = document.getElementById('loginSection');
      const backToHome = document.getElementById('backToHome');
      const form = document.getElementById('loginForm');
      const fullNameInput = document.getElementById('fullName');
      const emailInput = document.getElementById('email');
      const passwordInput = document.getElementById('password');
      const togglePassword = document.getElementById('togglePassword');
      const nameError = document.getElementById('nameError');
      const emailError = document.getElementById('emailError');
      const passwordError = document.getElementById('passwordError');
      const successMessage = document.getElementById('successMessage');

      // Show login section and hide hero on sign in button click
      signInBtn.addEventListener('click', () => {
        document.querySelector('.hero-container').style.display = 'none';
        loginSection.style.display = 'flex';
        fullNameInput.focus();
      });

      // Back to home button
      backToHome.addEventListener('click', (e) => {
        e.preventDefault();
        loginSection.style.display = 'none';
        document.querySelector('.hero-container').style.display = 'block';
      });

      // Toggle password visibility
      togglePassword.addEventListener('click', () => {
        const type = passwordInput.type === 'password' ? 'text' : 'password';
        passwordInput.type = type;
        togglePassword.textContent = type === 'password' ? 'üëÅ' : 'üôà';
      });

      // Real-time validation
      fullNameInput.addEventListener('blur', () => {
        if (fullNameInput.value.trim().length < 2) {
          nameError.style.display = 'block';
          nameError.textContent = 'Full name must be at least 2 characters.';
        } else {
          nameError.style.display = 'none';
        }
      });

      emailInput.addEventListener('blur', () => {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(emailInput.value)) {
          emailError.style.display = 'block';
        } else {
          emailError.style.display = 'none';
        }
      });

      passwordInput.addEventListener('blur', () => {
        if (passwordInput.value.length < 8) {
          passwordError.style.display = 'block';
        } else {
          passwordError.style.display = 'none';
        }
      });

      // Form submission
      form.addEventListener('submit', (e) => {
        e.preventDefault();
        let isValid = true;
        // Check all fields manually on submit
        if (fullNameInput.value.trim().length < 2) {
          nameError.style.display = 'block';
          isValid = false;
        } else {
          nameError.style.display = 'none';
        }
        {
          const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
          if (!emailRegex.test(emailInput.value)) {
            emailError.style.display = 'block';
            isValid = false;
          } else {
            emailError.style.display = 'none';
          }
        }
        if (passwordInput.value.length < 8) {
          passwordError.style.display = 'block';
          isValid = false;
        } else {
          passwordError.style.display = 'none';
        }

        if (isValid) {
          // Simulate success
          successMessage.textContent = `Welcome, ${fullNameInput.value}! You have successfully logged in.`;
          successMessage.style.display = 'block';
          // Reset form
          setTimeout(() => {
            form.reset();
            successMessage.style.display = 'none';
            fullNameInput.focus();
          }, 3000);
        }
      });
    });
  </script>
</body>
</html>
